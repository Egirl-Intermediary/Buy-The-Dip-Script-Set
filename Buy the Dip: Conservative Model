declare lower;

input short_length = 22;
input medium_length = 50;
input long_length = 100;
input aggresive_model = no;
input labels = yes;
input arrows = no;

# Plot indicator
plot Zeroline = 0;
Zeroline.AssignValueColor(color.white);

def short_value = ((high - Lowest(close[1], short_length)) / Lowest(close[1], short_length)) * 100;
def medium_value = ((high - Lowest(close[1], medium_length)) / Lowest(close[1], medium_length)) * 100;
def long_value = ((high - Lowest(close[1], long_length)) / Lowest(close[1], long_length)) * 100;

plot short_btd = if aggresive_model and short_value then short_value else double.nan;
plot med_btd = medium_value;
plot long_btd = long_value;

short_btd.AssignValueColor(color.green);
med_btd.AssignValueColor(color.orange);
long_btd.AssignValueColor(color.red);

def condition1 = short_btd crosses below Zeroline;
def condition2 = med_btd crosses below Zeroline;
def condition3 = long_btd crosses below Zeroline;

# Plot arrows
plot S_Arrow = if arrows and aggresive_model and condition1 then 0 else Double.NaN;
S_Arrow.SetDefaultColor(Color.green);
S_Arrow.SetPaintingStrategy(PaintingStrategy.ARROW_UP);

plot M_Arrow = if arrows and condition2 then 0 else Double.NaN;
M_Arrow.SetDefaultColor(Color.orange);
M_Arrow.SetPaintingStrategy(PaintingStrategy.ARROW_UP);

plot L_Arrow = if arrows and condition3 then 0 else Double.NaN;
L_Arrow.SetDefaultColor(Color.red);
L_Arrow.SetPaintingStrategy(PaintingStrategy.ARROW_DOWN);

AddLabel(yes and aggresive_model and labels, "Short Term", color.green);
AddLabel(yes and labels, "Medium Term", color.orange);
AddLabel(yes and labels, "Long Term", color.red);
